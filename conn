import pandas as pd
import os
import json

# --- Load column names from schema ---
schema_path = 'C:/Users/8216609/OneDrive - Standard Chartered Bank/Documents/VSCode/Project1/Output/schemas.json'
schemas = json.load(open(schema_path))
cdr = "Caller Details"
column_details = schemas[cdr]
column_name = list(map(lambda col: col["column_name"], column_details))

# --- Configuration ---
folder_path = os.path.abspath("C:/Users/8216609/OneDrive - Standard Chartered Bank/Desktop/India CDR/2025/Mar'25")
output_file = os.path.abspath('combined_output.csv')
rows_to_skip = 6

# Get list of Excel files
file_list = [f for f in os.listdir(folder_path) if f.endswith('.xlsx') or f.endswith('.xls')]

if not file_list:
    print("‚ùå No Excel files found in the folder.")
else:
    print(f"‚úÖ Found {len(file_list)} Excel files.\n")

first_file = True

# Loop through each file
for file in file_list:
    file_path = os.path.join(folder_path, file)
    ext = os.path.splitext(file)[1].lower()

    print(f"üìÑ Reading: {file}")
    try:
        if ext == ".xlsx":
            # Read Excel skipping 6 rows
            df = pd.read_excel(file_path, skiprows=rows_to_skip, header=None)
        elif ext == ".xls":
            # Read old .xls file as CSV style and split columns
            raw_data = pd.read_csv(file_path, skiprows=rows_to_skip, header=None, usecols=[1])
            df_split = raw_data.iloc[:, 0].astype(str).str.split('\t', expand=True)
            df = df_split.drop(0).reset_index(drop=True)
        else:
            print(f"‚ö†Ô∏è Unsupported format: {file}")
            continue

        # Apply predefined column names
        df.columns = column_name[:df.shape[1]]

        # Add source file column
        df['Source File'] = file

        # Append to final CSV
        df.to_csv(output_file, mode='a', index=False, header=first_file)
        first_file = False

        print(f"   ‚úÖ Appended to output")

    except Exception as e:
        print(f"   ‚ùå Error processing {file}: {e}")

print(f"\nüéâ All files combined successfully into:\n{output_file}")
